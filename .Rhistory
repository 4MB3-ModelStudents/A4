periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ymdcdata$date-ymdcdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {
lines(1/(s$freq), s$spec, xlab=xlab, ylab=ylab, ...)
}else plot(1/(s$freq), s$spec, xlab=xlab, ylab=ylab, ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
time.plot <- function(ymdcdata, ma.smooth=FALSE, sides = 1, add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Moving average smoothing
if(isTRUE(ma.smooth)){
olddata <- ymdcdata
#Replace middle values by moving average
for (i in seq(sides+1,length(olddata$cases)-sides,1)){
ymdcdata$cases[i] <- mean(olddata$cases[i-sides:i+sides])
}
#Replace ends of data with NAs
ymdcdata$cases[1:sides] <- NA
ymdcdata$cases[sides:length(olddata$cases)-sides+1] <- NA
}
if (isTRUE(add)) {
lines(cases~date,ymdcdata, ...)
}else plot(cases~date,ymdcdata, ...)
}
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ymdcdata$date-ymdcdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec, ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
lpl.data
ycdata <- lon.data
ycdata$date <- as.numeric(lon.data$date-lon.data$date[1])/365
ycdata
s <- spectrum(ycdata)
length(s$spec)
length(s$freq)
plot(s)
plot(s$freq ~ s$spec)
a <- data.frame(col1 = c(1,2,3), col2 = c(4,5,6))
a
lon.data
read.ymdc <- function(filename){
data <- read.csv(filename, skip=6)
ymdcdata <- as.data.frame(date=as.Date(paste(as.character(data$year), as.character(data$month),as.character(data$day), sep = "-")), cases = data$cases)
return(ymdcdata)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
lon.data
lpl.data
a <- data.frame(col1 = c(1,2,3), col2 = c(4,5,6))
s <- spectrum(a, plot=FALSE)
plot( s$freq, s$spec, type="l")
plot(0,0,xlim=c(0,tmax),ylim=c(0,N[j]+1),xlab="Time", ylab="Prevalence (I)", main=paste("$\\N =", N[j]))
j=1
j <- 1
i <- 1
plot(0,0,xlim=c(0,tmax),ylim=c(0,N[j]+1),xlab="Time", ylab="Prevalence (I)", main=paste("$\\N =", N[j]))
lines(SI.Gillespie(beta, N[j], I0, tmax),lty="dotted",
col=line[i+1]) # use a different line colour for each solution
SI.Gillespie(beta, N[j], I0, tmax)
beta <- 1
I0 <- 1
tmax <- 1
SI.Gillespie(beta, N[j], I0, tmax)
lines(SI.Gillespie(beta, N[j], I0, tmax),lty="dotted",
col=line[i+1]) # use a different line colour for each solution
plot(SI.Gillespie(beta, N[j], I0, tmax))
SI.Gillespie <- function(beta, N, I0, tmax){
timeseries <- c()
timeseries <- rbind(timeseries, c(0,I0))
index <- 1
while(timeseries[index,2] < tmax){
if (timeseries[index,1] < N){
rate <- beta*(timeseries[index,1])*(N-timeseries[index,1])
timestep <- rexp(n=1, rate= rate)
timeseries <- rbind(timeseries, c(timeseries[index,2]+timestep, timeseries[index,1]+1))
}else{
timeseries <- rbind(timeseries, c(timeseries[index,2]+timestep), timeseries[index,1])
}
index <- index+1
}
return(timeseries)
}
plot(SI.Gillespie(beta, N[j], I0, tmax))
SI.Gillespie <- function(beta, N, I0, tmax){
timeseries <- c()
timeseries <- rbind(timeseries, c(0,I0))
index <- 1
while(timeseries[index,1] < tmax){
if (timeseries[index,2] < N){
rate <- beta*(timeseries[index,2])*(N-timeseries[index,2])
timestep <- rexp(n=1, rate= rate)
timeseries <- rbind(timeseries, c(timeseries[index,1]+timestep, timeseries[index,2]+1))
}else{
timeseries <- rbind(timeseries, c(timeseries[index,1]+timestep), timeseries[index,2])
}
index <- index+1
}
return(timeseries)
}
plot(SI.Gillespie(beta, N[j], I0, tmax))
SI.Gillespie(beta, N[j], I0, tmax)
SI.Gillespie <- function(beta, N, I0, tmax){
timeseries <- c()
timeseries <- rbind(timeseries, c(0,I0))
index <- 1
while(timeseries[index,1] < tmax){
if (timeseries[index,2] < N){
rate <- beta*(timeseries[index,2])*(N-timeseries[index,2])
timestep <- rexp(n=1, rate= rate)
timeseries <- rbind(timeseries, c(timeseries[index,1]+timestep, timeseries[index,2]+1))
}else{
timeseries <- rbind(timeseries, c(timeseries[index,1]+timestep, timeseries[index,2]))
}
index <- index+1
}
return(timeseries)
}
plot(SI.Gillespie(beta, N[j], I0, tmax))
plot(SI.Gillespie(beta, N[j], I0, tmax), type='l')
beta <- 1
I0 <- 1
tmax <- 1
N <- c(32, 10^2, 10^3, 10^4)
par(mfrow=c(length(N),1))
for (j in 1:length(N)){
## draw box for plot
plot(0,0,xlim=c(0,tmax),ylim=c(0,N[j]+1),xlab="Time", ylab="Prevalence (I)", main=paste("$\\N =", N[j]))
line <- c(1:30)
for (i in 1:length(line)) {
set.seed(line[i])
lines(SI.Gillespie(beta, N[j], I0, tmax),lty="dotted",
col=line[i+1]) # use a different line colour for each solution
}
draw.soln(ic=c(x=N[j]-I0,y=I0), tmax=tmax,
func= SI.vector.field,
parms=c(beta,gamma=1))
}
beta <- 1
I0 <- 1
tmax <- 0.5
N <- c(32, 10^2, 10^3, 10^4)
par(mfrow=c(length(N),1))
for (j in 1:length(N)){
## draw box for plot
plot(0,0,xlim=c(0,tmax),ylim=c(0,N[j]+1),xlab="Time", ylab="Prevalence (I)", main=paste("$\\N =", N[j]))
line <- c(1:30)
for (i in 1:length(line)) {
set.seed(line[i])
lines(SI.Gillespie(beta, N[j], I0, tmax),lty="dotted",
col=line[i+1]) # use a different line colour for each solution
}
draw.soln(ic=c(x=N[j]-I0,y=I0), tmax=tmax,
func= SI.vector.field,
parms=c(beta,gamma=1))
}
beta <- 1
I0 <- 1
tmax <- 0.3
N <- c(32, 10^2, 10^3, 10^4)
par(mfrow=c(length(N),1))
for (j in 1:length(N)){
## draw box for plot
plot(0,0,xlim=c(0,tmax),ylim=c(0,N[j]+1),xlab="Time", ylab="Prevalence (I)", main=paste("$\\N =", N[j]))
line <- c(1:30)
for (i in 1:length(line)) {
set.seed(line[i])
lines(SI.Gillespie(beta, N[j], I0, tmax),lty="dotted",
col=line[i+1]) # use a different line colour for each solution
}
draw.soln(ic=c(x=N[j]-I0,y=I0), tmax=tmax,
func= SI.vector.field,
parms=c(beta,gamma=1))
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
beta <- 1
I0 <- 1
tmax <- 0.3
N <- c(32, 10^2, 10^3, 10^4)
par(mfrow=c(length(N),1))
for (j in 1:length(N)){
## draw box for plot
plot(0,0,xlim=c(0,tmax),ylim=c(0,N[j]+1),xlab="Time", ylab="Prevalence (I)", main=paste("$\\N =", N[j]))
line <- c(1:30)
for (i in 1:length(line)) {
set.seed(line[i])
lines(SI.Gillespie(beta, N[j], I0, tmax),lty="dotted",
col=line[i+1]) # use a different line colour for each solution
}
draw.soln(ic=c(x=N[j]-I0,y=I0), tmax=tmax,
func= SI.vector.field,
parms=c(beta,gamma=1))
}
lon.data
ycdata <- ymdcdata
ycdata$date <- as.numeric(ymdcdata$date-ymdcdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
ycdata <- lon.data
ycdata$date <- as.numeric(ymdcdata$date-ymdcdata$date[1])/365
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
ycdata
s <- spectrum(ycdata, plot=FALSE)
length(s$freq)
length(s$spec)
v <- c(c(1,2),c(2,3))
v
a <- data.frame(col1 = c(1,2,3), col2 = c(4,5,6))
a
s <- spectrum(a, plot=FALSE)
length(s$freq)
length(s$spec)
s <- spectrum(ymdcdata, plot=FALSE)
s <- spectrum(lon.data, plot=FALSE)
if (isTRUE(add)) {
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec, ...)
plot(s$freq, s$spec)
A<- matrix(c(1,2,3,4),nrow=2,ncol=2, byrow=TRUE)
A
s <- spectrum(A, plot=FALSE)
plot( s$freq, s$spec, type="l")
s <- spectrum(lon.data, plot=FALSE)
plot( s$freq, s$spec, type="l")
read.ymdc <- function(filename){
data <- read.csv(filename, skip=6)
ymdcdata <- as.data.frame(date=as.Date(paste(as.character(data$year), as.character(data$month),as.character(data$day), sep = "-")), cases = data$cases)
return(ymdcdata)
}
time.plot <- function(ymdcdata, ma.smooth=FALSE, sides = 1, add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Moving average smoothing
if(isTRUE(ma.smooth)){
olddata <- ymdcdata
#Replace middle values by moving average
for (i in seq(sides+1,length(olddata$cases)-sides,1)){
ymdcdata$cases[i] <- mean(olddata$cases[i-sides:i+sides])
}
#Replace ends of data with NAs
ymdcdata$cases[1:sides] <- NA
ymdcdata$cases[sides:length(olddata$cases)-sides+1] <- NA
}
if (isTRUE(add)) {
lines(cases~date,ymdcdata, ...)
}else plot(cases~date,ymdcdata, ...)
}
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec, ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
read.ymdc <- function(filename){
data <- read.csv(filename, skip=6)
ymdcdata <- NULL
ymdcdata$cases <- data$cases
ymdcdata$date <- as.Date(paste(as.character(data$year), as.character(data$month),as.character(data$day), sep = "-"))
ymdcdata <- as.data.frame(ymdcdata)
return(ymdcdata)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
s <- spectrum(lon.data, plot=FALSE)
plot(1/(s$freq), s$spec)
s
s$spec
lon.data
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {lon.data
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq[,1]), s$spec, ...)
}
read.ymdc <- function(filename){
data <- read.csv(filename, skip=6)
ymdcdata <- NULL
ymdcdata$date <- as.Date(paste(as.character(data$year), as.character(data$month),as.character(data$day), sep = "-"))
ymdcdata$cases <- data$cases
ymdcdata <- as.data.frame(ymdcdata)
return(ymdcdata)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
s$freq[, 1]
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {lon.data
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec[,1], ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {lon.data
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec[,2], ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {lon.data
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec[,1], ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ymdcdata, plot=FALSE)
if (isTRUE(add)) {lon.data
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec[,1], ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
s$freq
plot( s$freq, s$spec, type="l")
plot( s$freq, s$spec[,1], type="l")
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
periodogram <- function(ymdcdata, timerange=1:length(ymdcdata$date), add=FALSE, ...){
if (dev.cur() == 1L && !identical(add, FALSE)) {
warning("'add' will be ignored as there is no existing plot")
add <- FALSE
}
#Set data outside timerange to NAs
ymdcdata[setdiff(1:length(ymdcdata$date),timerange),] <- NA
ycdata <- ymdcdata
ycdata$date <- as.numeric(ycdata$date-ycdata$date[1])/365
s <- spectrum(ycdata, plot=FALSE)
if (isTRUE(add)) {lon.data
lines(1/(s$freq), s$spec, ...)
}else plot(1/(s$freq), s$spec[,1], ...)
}
lon.data <- read.ymdc("meas_uk__lon_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lon.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in London, England",bty="l",col="red")
periodogram(lon.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
lpl.data <- read.ymdc("meas_uk__lpl_1944-94_wk.csv")
par(mfrow=c(2,1))
time.plot(lpl.data, ma.smooth=FALSE, add=FALSE, type="l", xlab="Date", ylab="Cases", main="Weekly Cases of Measles in Liverpool, England", bty="l", col="red")
periodogram(lpl.data, add=FALSE, type="l", xlab="Years", ylab="", main="Period Periodogram",bty="l",col="blue")
spectrum(lon.data)
time.plot(lon.data, ma.smooth=FALSE, sides = 1, add=TRUE)
time.plot(lon.data, ma.smooth=TRUE, sides = 1, type="l")
getwd()
